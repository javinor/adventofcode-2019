// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Path = require("path");
var $$Array = require("bs-platform/lib/js/array.js");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var Caml_primitive = require("bs-platform/lib/js/caml_primitive.js");

var inputPath = "./src/" + (Path.parse("Day01.re").name + ".input");

var dummy_input = /* array */[
  "12",
  "14",
  "1969",
  "100756"
];

var input = $$Array.map(Caml_format.caml_int_of_string, Fs.readFileSync(inputPath, "utf8").split("\n"));

var result = $$Array.fold_left((function (prim, prim$1) {
        return prim + prim$1 | 0;
      }), 0, $$Array.map((function (mass) {
            return (mass / 3 | 0) - 2 | 0;
          }), input));

console.log("Part1 result: " + String(result));

var Part1 = /* module */[
  /* input */input,
  /* result */result
];

var input$1 = $$Array.map(Caml_format.caml_int_of_string, Fs.readFileSync(inputPath, "utf8").split("\n"));

function calc_total_fuel(mass) {
  var _acc = 0;
  var _mass = mass;
  while(true) {
    var mass$1 = _mass;
    var acc = _acc;
    var fuel = Caml_primitive.caml_int_max((mass$1 / 3 | 0) - 2 | 0, 0);
    var match = fuel === 0;
    if (match) {
      return acc + fuel | 0;
    } else {
      _mass = fuel;
      _acc = acc + fuel | 0;
      continue ;
    }
  };
}

var result$1 = $$Array.fold_left((function (prim, prim$1) {
        return prim + prim$1 | 0;
      }), 0, $$Array.map(calc_total_fuel, input$1));

console.log("Part2 result: " + String(result$1));

var Part2 = /* module */[
  /* input */input$1,
  /* calc_total_fuel */calc_total_fuel,
  /* result */result$1
];

exports.inputPath = inputPath;
exports.dummy_input = dummy_input;
exports.Part1 = Part1;
exports.Part2 = Part2;
/* inputPath Not a pure module */
